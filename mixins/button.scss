@mixin button-common() {
  box-sizing: border-box;
  cursor: pointer;
  font-size: 14px;
  font-weight: 700;
  font-family: "Open Sans", "Helvetica Neue", "Helvetica", sans-serif;
  line-height: 20px;
  white-space: nowrap;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);  /* for iOS */
  -webkit-tap-highlight-color: transparent;       /* for some Androids */

  /* the following properties reset the Browser/OS specific styles of a <button> */
  border: none;
  background-color: transparent;
  display: inline-block;
  padding: 10px 20px;
  color: #fff;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  border-radius: 2px;

  /* FIXME: hacky max-width to allow the button to transition to loading icon */
  max-width: 400px;
  overflow: hidden;
  transition: background-color 0.25s, max-width .5s ease, color .5s ease;
  position: relative;

  &:before {
    content: '';
    width: calc(100% - 40px);
    position: absolute;
    transition: width .5s ease .25s;
  }

  &.is-loading {
    max-width: calc(40px + 1em);
    overflow: hidden;
    position: relative;
    color: transparent;
    cursor: default;

    &:before {
      content: '\E036';
      font-family: nibdings;
      display: inline-block;
      position: absolute;
      color: $textColorWhite;
      animation: v2-icon-spin 0.75s infinite linear;
      width: 1em;
    }
  }

  /* === Modifier: Disabled === */

  &--is-disabled, &[disabled] {
    cursor: default;
  }

  /* === Modifier: Icon === */

  &--icon-on-left > .v2-icon {
    margin-right: 10px;
  }

  &--icon-on-right > .v2-icon {
    margin-left: 10px;
  }

}

@mixin button-type($type) {

  @if $type == "primary" {

    background-color: $primaryBgColorOrange;

    &:not(.is-loading):hover {
      background-color: hover-color($primaryBgColorOrange);
    }

    &:not(.is.loading):active {
      background-color: active-color($primaryBgColorOrange);
    }

    @include disabled('&') {
      color: rgba($textColorWhite, 0.3);
      background-color: $primaryBgColorOrange;
    }

  } @else if $type == "secondary-green" {

    background-color: $secondaryBgColorGreen;

    &:not(.is-loading):hover {
      background-color: hover-color($secondaryBgColorGreen);
    }

    &:not(.is-loading):active {
      background-color: active-color($secondaryBgColorGreen);
    }

  } @else if $type == "secondary-light-grey" {

    color: $textColorGrey;
    background-color: $secondaryBgColorLightGrey;

    &:not(.is-loading):hover {
      background-color: hover-color($secondaryBgColorLightGrey);
    }

    &:not(.is-loading):active {
      background-color: active-color($secondaryBgColorLightGrey);
    }

    &.is-loading:before {
      color: $textColorGrey;
    }

  } @else if $type == "secondary-dark-grey" {

    background-color: $secondaryBgColorDarkGrey;

    &:not(.is-loading):hover {
      background-color: hover-color($secondaryBgColorDarkGrey);
    }

    &:not(.is-loading):active {
      background-color: active-color($secondaryBgColorDarkGrey);
    }

  } @else if $type == "tertiary-green" {

    color: $textColorGreen;

    &:not(.is-loading):hover {
      background: hsla(0, 0, 0, .05);
    }

    &:not(.is-loading):active {
      background: hsla(0, 0, 0, .1);
    }

    &.is-loading:before {
      color: $textColorGreen;
    }

  } @else if $type == "tertiary-grey" {

    color: $textColorGrey;

    &:not(.is-loading):hover {
      background: hsla(0, 0, 0, .05);
    }

    &:not(.is-loading):active {
      background: hsla(0, 0, 0, .1);
    }

    &.is-loading:before {
      color: $textColorGrey;
    }
  }
}

@mixin button-size($size) {
  @if $size == "medium" {

    font-family: "roboto", "Helvetica Neue", "Helvetica", sans-serif;
    font-size: 18px;
    line-height: 24px;
    padding: 10px 25px !important;

    &.is-loading {
      max-width: calc(50px + 1em);
    }

  } @else if $size == "large" {

    font-family: "roboto", "Helvetica Neue", "Helvetica", sans-serif;
    font-size: 24px;
    line-height: 32px;
    padding: 10px 30px !important;

    &.is-loading {
      max-width: calc(60px + 1em);
    }

  }
}

@mixin button($type, $icon: false, $size: null) {
  @include button-common();
  @include button-type($type);
  @include button-size($size);

  @if $icon == true {
    &:after {
      content: "\E020";
      display: inline-block;
      font: normal normal normal 14px/1 "nibdings";
      font-size: inherit;
      text-rendering: auto;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      vertical-align: middle;
      margin-top: -0.18em;
      margin-left: 10px;
    }
  }

}